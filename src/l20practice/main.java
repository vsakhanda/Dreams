package l20practice;

/*
 1 ArrayList
 Напишіть програму - яка зчитує слово з консолі, працює до тих пір поки користувач не введе слово No, якщо
 користувач вводить слово Yes - програма питає у нього слово - яке б додавало до арай лісту,
 коли користувач - вводить слово No - програма виводить ліст на екран і завершує роботу

 додатково - через те що це ліст, додати перевірку перед додаванням чи додається таке саме слово - якщо так
 то вивести на екран наступне - ви ввели слово яке вже додано, введіть будь-ласка інше
 */

/*
    2 LinkedHashMap (removeEldestEntry)
    Створіть простий кеш для зберігання String значень з ключами типу Integer.
    Кеш повинен містити не більше 10 елементів. Якщо кількість елементів в кеші перевищує 10,
    програма повинна автоматично видаляти найстаріший елемент.
 */

/*
    3 Журнал останніх дій" (LinkedList)

    Спробуйте створити програму, яка використовує LinkedList для створення журналу останніх дій користувача.
    Користувач може виконувати дії та записувати їх в журнал, причому максимальний розмір журналу повинен бути обмежений (наприклад, 5 дій).
    Коли користувач додає нову дію, і якщо розмір журналу перевищує максимальний розмір, то найстаріша дія видаляється з журналу.
    Програма також повинна надавати можливість користувачу переглянути останні дії.
 */

/*
    4

    Задача "Унікальні числа" (TreeSet)

    Напишіть програму, яка отримує від користувача числа і додає їх до TreeSet.
    Програма повинна продовжувати отримувати числа від користувача, поки він не введе "stop".
    Після того, як користувач введе "stop", програма повинна вивести всі унікальні числа, які були введені, у відсортованому порядку.
 */

/*
    5

    Студенти і їх оцінки (TreeMap)

    Опишіть клас Student, який має два поля: ім'я (name) та середній бал (averageGrade). Середній бал повинен бути числом від 0 до 100.

    Створіть TreeMap, де ключі - це об'єкти класу Student, а значення - це кількість зарахованих курсів.
    Ключі повинні бути впорядковані за спаданням середнього балу; якщо у двох студентів однаковий середній бал,
    вони повинні бути впорядковані в алфавітному порядку за їх іменами.

 */

/*
    6
    Зробити кожну вище описану задачку класом з методом таск (де буде присутня вся логіка) - і при передачі номеру задачі
    вона має викликатись.
 */


public class main {
}
